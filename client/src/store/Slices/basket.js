import { createSlice } from "@reduxjs/toolkit";

// Define the initial state of the basket as an empty array
const initialState = [];

// Create a slice using the createSlice function from Redux Toolkit
export const basketSlice = createSlice({
  name: "basket", // Specify the name of the slice
  initialState, // Set the initial state
  reducers: {
    // Define the addToCart reducer
    addToCart: (state, action) => {
      // Append the payload (item to be added) to the state array using the spread operator
      return [...state, action.payload];
    },
    // Define the removeOneItemFromCart reducer
    removeOneItemFromCart: (state = initialState, action) => {
      // Find the index of the item to be removed using the eventID from the payload
      const index = state.findIndex(
        (item) => item.eventID === action.payload.eventID
      );
      if (index !== -1) {
        // If the item is found (index is not -1), remove it from the state array using array slicing
        return [...state.slice(0, index), ...state.slice(index + 1)];
      }
      // Return the state as-is if the item is not found
      return state;
    },
    // Define the resetCart reducer
    resetCart: () => initialState, // Reset the cart by returning the initial state
  },
});

// Export the action creators generated by createSlice
export const { addToCart, removeOneItemFromCart, resetCart } =
  basketSlice.actions;
